.container {
  position: fixed; /* Or absolute, depending on parent */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 0; /* Layer above castle (-1) but below terminal (1+) */
  pointer-events: none; /* Allow clicks to pass through */
}

.point {
  position: absolute;
  width: 3px; /* Adjust size */
  height: 3px; /* Adjust size */
  background-color: rgba(255, 255, 255, 0.5); /* Adjust color and opacity */
  border-radius: 50%;
  box-shadow: 0 0 5px rgba(255, 255, 255, 0.7); /* Optional glow */
  opacity: 0.8; /* Make them visible by default now */
  /* animation-name: blinkFly; */ /* Removed animation */
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  /* animation-duration and animation-delay are set inline in the component */
  /* Keep position/size/color/etc., just stop the blink */
  top: var(--initial-top, 50%); /* Use CSS vars set inline for initial position */
  left: var(--initial-left, 50%);
}

@keyframes blinkFly {
  0%, 100% {
    opacity: 0;
    transform: translate(0, 0) scale(0.5); /* Start/end small and faded */
  }
  20%, 80% {
    opacity: 0.8; /* Visible */
    transform: translate(calc(var(--random-x, 0) * 50px), calc(var(--random-y, 0) * 50px)) scale(1); /* Move slightly and scale up */
  }
  50% {
    opacity: 1; /* Peak brightness */
     transform: translate(calc(var(--random-x, 0) * 100px), calc(var(--random-y, 0) * 100px)) scale(1.2); /* Move further and scale slightly larger */
  }
}

/* Add more complex movement variations if needed */
